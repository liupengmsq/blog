# 设置根日志级别为debug, 所有等于或者大于debug的日志都可以输出
# 指定了两个appender, 分别叫做stdout和file
log4j.rootLogger=debug, stdout, file

# stdout为控制台输出
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout

# Pattern to output the caller's file name and line number.
log4j.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{2}:%L - %m%n

# file为日志文件输出
# Redirect log messages to a log file
log4j.appender.file=org.apache.log4j.RollingFileAppender

# Outputs to Tomcat home
#log4j.appender.file.File=${catalina.home}/logs/myapp.log
log4j.appender.file.File=/Users/peng/logs/myblog.log
log4j.appender.file.MaxFileSize=5MB
log4j.appender.file.MaxBackupIndex=10
log4j.appender.file.layout=org.apache.log4j.PatternLayout

# %d{yyyy-MM-dd HH:mm:ss}表示输出日期时间
# %-5p 表示日志的优先级，即“INFO, WARN, FATAL等等”
# %c 表示日志的category标示, 即传入Logger.getLogger的参数，
#      对于 Logger.getLogger("com.foo.bar") ，%c{2}输出的就是“foo.bar”
# %L 表示此条日志所在代码中的行号
# %m 表示日志信息，就是真正的日志内容
# %n 表示换行
log4j.appender.file.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{2}:%L - %m%n
